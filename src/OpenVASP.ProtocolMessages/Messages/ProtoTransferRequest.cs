// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ProtoTransferRequest.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenVASP.ProtocolMessages.Messages {

  /// <summary>Holder for reflection information generated from ProtoTransferRequest.proto</summary>
  public static partial class ProtoTransferRequestReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtoTransferRequest.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoTransferRequestReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChpQcm90b1RyYW5zZmVyUmVxdWVzdC5wcm90bxIRcHJvdG9idWZfb3BlbnZh",
            "c3AiWQoUUHJvdG9UcmFuc2ZlclJlcXVlc3QSGgoSdmlydHVhbF9hc3NldF9u",
            "YW1lGAEgASgJEhUKDXRyYW5zZmVyX3R5cGUYAiABKAUSDgoGYW1vdW50GAMg",
            "ASgJQiWqAiJPcGVuVkFTUC5Qcm90b2NvbE1lc3NhZ2VzLk1lc3NhZ2VzYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenVASP.ProtocolMessages.Messages.ProtoTransferRequest), global::OpenVASP.ProtocolMessages.Messages.ProtoTransferRequest.Parser, new[]{ "VirtualAssetName", "TransferType", "Amount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoTransferRequest : pb::IMessage<ProtoTransferRequest> {
    private static readonly pb::MessageParser<ProtoTransferRequest> _parser = new pb::MessageParser<ProtoTransferRequest>(() => new ProtoTransferRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoTransferRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenVASP.ProtocolMessages.Messages.ProtoTransferRequestReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoTransferRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoTransferRequest(ProtoTransferRequest other) : this() {
      virtualAssetName_ = other.virtualAssetName_;
      transferType_ = other.transferType_;
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoTransferRequest Clone() {
      return new ProtoTransferRequest(this);
    }

    /// <summary>Field number for the "virtual_asset_name" field.</summary>
    public const int VirtualAssetNameFieldNumber = 1;
    private string virtualAssetName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VirtualAssetName {
      get { return virtualAssetName_; }
      set {
        virtualAssetName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "transfer_type" field.</summary>
    public const int TransferTypeFieldNumber = 2;
    private int transferType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TransferType {
      get { return transferType_; }
      set {
        transferType_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private string amount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Amount {
      get { return amount_; }
      set {
        amount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoTransferRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoTransferRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VirtualAssetName != other.VirtualAssetName) return false;
      if (TransferType != other.TransferType) return false;
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VirtualAssetName.Length != 0) hash ^= VirtualAssetName.GetHashCode();
      if (TransferType != 0) hash ^= TransferType.GetHashCode();
      if (Amount.Length != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VirtualAssetName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VirtualAssetName);
      }
      if (TransferType != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TransferType);
      }
      if (Amount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VirtualAssetName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VirtualAssetName);
      }
      if (TransferType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TransferType);
      }
      if (Amount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoTransferRequest other) {
      if (other == null) {
        return;
      }
      if (other.VirtualAssetName.Length != 0) {
        VirtualAssetName = other.VirtualAssetName;
      }
      if (other.TransferType != 0) {
        TransferType = other.TransferType;
      }
      if (other.Amount.Length != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VirtualAssetName = input.ReadString();
            break;
          }
          case 16: {
            TransferType = input.ReadInt32();
            break;
          }
          case 26: {
            Amount = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
