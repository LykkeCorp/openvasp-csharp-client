// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: ProtoVaspInfo.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenVASP.ProtocolMessages.Messages {

  /// <summary>Holder for reflection information generated from ProtoVaspInfo.proto</summary>
  public static partial class ProtoVaspInfoReflection {

    #region Descriptor
    /// <summary>File descriptor for ProtoVaspInfo.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ProtoVaspInfoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNQcm90b1Zhc3BJbmZvLnByb3RvEhFwcm90b2J1Zl9vcGVudmFzcBoYUHJv",
            "dG9Qb3N0YWxBZGRyZXNzLnByb3RvGhdQcm90b1BsYWNlT2ZCaXJ0aC5wcm90",
            "bxoaUHJvdG9OYXR1cmFsUGVyc29uSWQucHJvdG8aHFByb3RvSnVyaWRpY2Fs",
            "UGVyc29uSWQucHJvdG8i3QIKDVByb3RvVmFzcEluZm8SDAoEbmFtZRgBIAEo",
            "CRIVCg12YXNwX2lkZW50aXR5GAIgASgJEhMKC3Zhc3BfcHVia2V5GAMgASgJ",
            "Ej0KDnBvc3RhbF9hZGRyZXNzGAQgASgLMiUucHJvdG9idWZfb3BlbnZhc3Au",
            "UHJvdG9Qb3N0YWxBZGRyZXNzEjoKDHBsYWNlT2ZCaXJ0aBgFIAEoCzIkLnBy",
            "b3RvYnVmX29wZW52YXNwLlByb3RvUGxhY2VPZkJpcnRoEkIKEW5hdHVyYWxf",
            "cGVyc29uX2lkGAYgAygLMicucHJvdG9idWZfb3BlbnZhc3AuUHJvdG9OYXR1",
            "cmFsUGVyc29uSWQSRgoTanVyaWRpY2FsX3BlcnNvbl9pZBgHIAMoCzIpLnBy",
            "b3RvYnVmX29wZW52YXNwLlByb3RvSnVyaWRpY2FsUGVyc29uSWQSCwoDYmlj",
            "GAggASgJQiWqAiJPcGVuVkFTUC5Qcm90b2NvbE1lc3NhZ2VzLk1lc3NhZ2Vz",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::OpenVASP.ProtocolMessages.Messages.ProtoPostalAddressReflection.Descriptor, global::OpenVASP.ProtocolMessages.Messages.ProtoPlaceOfBirthReflection.Descriptor, global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonIdReflection.Descriptor, global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonIdReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo), global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfo.Parser, new[]{ "Name", "VaspIdentity", "VaspPubkey", "PostalAddress", "PlaceOfBirth", "NaturalPersonId", "JuridicalPersonId", "Bic" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoVaspInfo : pb::IMessage<ProtoVaspInfo> {
    private static readonly pb::MessageParser<ProtoVaspInfo> _parser = new pb::MessageParser<ProtoVaspInfo>(() => new ProtoVaspInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoVaspInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenVASP.ProtocolMessages.Messages.ProtoVaspInfoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoVaspInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoVaspInfo(ProtoVaspInfo other) : this() {
      name_ = other.name_;
      vaspIdentity_ = other.vaspIdentity_;
      vaspPubkey_ = other.vaspPubkey_;
      postalAddress_ = other.postalAddress_ != null ? other.postalAddress_.Clone() : null;
      placeOfBirth_ = other.placeOfBirth_ != null ? other.placeOfBirth_.Clone() : null;
      naturalPersonId_ = other.naturalPersonId_.Clone();
      juridicalPersonId_ = other.juridicalPersonId_.Clone();
      bic_ = other.bic_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoVaspInfo Clone() {
      return new ProtoVaspInfo(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vasp_identity" field.</summary>
    public const int VaspIdentityFieldNumber = 2;
    private string vaspIdentity_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VaspIdentity {
      get { return vaspIdentity_; }
      set {
        vaspIdentity_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vasp_pubkey" field.</summary>
    public const int VaspPubkeyFieldNumber = 3;
    private string vaspPubkey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VaspPubkey {
      get { return vaspPubkey_; }
      set {
        vaspPubkey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postal_address" field.</summary>
    public const int PostalAddressFieldNumber = 4;
    private global::OpenVASP.ProtocolMessages.Messages.ProtoPostalAddress postalAddress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenVASP.ProtocolMessages.Messages.ProtoPostalAddress PostalAddress {
      get { return postalAddress_; }
      set {
        postalAddress_ = value;
      }
    }

    /// <summary>Field number for the "placeOfBirth" field.</summary>
    public const int PlaceOfBirthFieldNumber = 5;
    private global::OpenVASP.ProtocolMessages.Messages.ProtoPlaceOfBirth placeOfBirth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::OpenVASP.ProtocolMessages.Messages.ProtoPlaceOfBirth PlaceOfBirth {
      get { return placeOfBirth_; }
      set {
        placeOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "natural_person_id" field.</summary>
    public const int NaturalPersonIdFieldNumber = 6;
    private static readonly pb::FieldCodec<global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonId> _repeated_naturalPersonId_codec
        = pb::FieldCodec.ForMessage(50, global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonId.Parser);
    private readonly pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonId> naturalPersonId_ = new pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoNaturalPersonId> NaturalPersonId {
      get { return naturalPersonId_; }
    }

    /// <summary>Field number for the "juridical_person_id" field.</summary>
    public const int JuridicalPersonIdFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonId> _repeated_juridicalPersonId_codec
        = pb::FieldCodec.ForMessage(58, global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonId.Parser);
    private readonly pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonId> juridicalPersonId_ = new pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::OpenVASP.ProtocolMessages.Messages.ProtoJuridicalPersonId> JuridicalPersonId {
      get { return juridicalPersonId_; }
    }

    /// <summary>Field number for the "bic" field.</summary>
    public const int BicFieldNumber = 8;
    private string bic_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bic {
      get { return bic_; }
      set {
        bic_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoVaspInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoVaspInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (VaspIdentity != other.VaspIdentity) return false;
      if (VaspPubkey != other.VaspPubkey) return false;
      if (!object.Equals(PostalAddress, other.PostalAddress)) return false;
      if (!object.Equals(PlaceOfBirth, other.PlaceOfBirth)) return false;
      if(!naturalPersonId_.Equals(other.naturalPersonId_)) return false;
      if(!juridicalPersonId_.Equals(other.juridicalPersonId_)) return false;
      if (Bic != other.Bic) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (VaspIdentity.Length != 0) hash ^= VaspIdentity.GetHashCode();
      if (VaspPubkey.Length != 0) hash ^= VaspPubkey.GetHashCode();
      if (postalAddress_ != null) hash ^= PostalAddress.GetHashCode();
      if (placeOfBirth_ != null) hash ^= PlaceOfBirth.GetHashCode();
      hash ^= naturalPersonId_.GetHashCode();
      hash ^= juridicalPersonId_.GetHashCode();
      if (Bic.Length != 0) hash ^= Bic.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (VaspIdentity.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(VaspIdentity);
      }
      if (VaspPubkey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VaspPubkey);
      }
      if (postalAddress_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PostalAddress);
      }
      if (placeOfBirth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PlaceOfBirth);
      }
      naturalPersonId_.WriteTo(output, _repeated_naturalPersonId_codec);
      juridicalPersonId_.WriteTo(output, _repeated_juridicalPersonId_codec);
      if (Bic.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Bic);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (VaspIdentity.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VaspIdentity);
      }
      if (VaspPubkey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VaspPubkey);
      }
      if (postalAddress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostalAddress);
      }
      if (placeOfBirth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlaceOfBirth);
      }
      size += naturalPersonId_.CalculateSize(_repeated_naturalPersonId_codec);
      size += juridicalPersonId_.CalculateSize(_repeated_juridicalPersonId_codec);
      if (Bic.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bic);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoVaspInfo other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.VaspIdentity.Length != 0) {
        VaspIdentity = other.VaspIdentity;
      }
      if (other.VaspPubkey.Length != 0) {
        VaspPubkey = other.VaspPubkey;
      }
      if (other.postalAddress_ != null) {
        if (postalAddress_ == null) {
          PostalAddress = new global::OpenVASP.ProtocolMessages.Messages.ProtoPostalAddress();
        }
        PostalAddress.MergeFrom(other.PostalAddress);
      }
      if (other.placeOfBirth_ != null) {
        if (placeOfBirth_ == null) {
          PlaceOfBirth = new global::OpenVASP.ProtocolMessages.Messages.ProtoPlaceOfBirth();
        }
        PlaceOfBirth.MergeFrom(other.PlaceOfBirth);
      }
      naturalPersonId_.Add(other.naturalPersonId_);
      juridicalPersonId_.Add(other.juridicalPersonId_);
      if (other.Bic.Length != 0) {
        Bic = other.Bic;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            VaspIdentity = input.ReadString();
            break;
          }
          case 26: {
            VaspPubkey = input.ReadString();
            break;
          }
          case 34: {
            if (postalAddress_ == null) {
              PostalAddress = new global::OpenVASP.ProtocolMessages.Messages.ProtoPostalAddress();
            }
            input.ReadMessage(PostalAddress);
            break;
          }
          case 42: {
            if (placeOfBirth_ == null) {
              PlaceOfBirth = new global::OpenVASP.ProtocolMessages.Messages.ProtoPlaceOfBirth();
            }
            input.ReadMessage(PlaceOfBirth);
            break;
          }
          case 50: {
            naturalPersonId_.AddEntriesFrom(input, _repeated_naturalPersonId_codec);
            break;
          }
          case 58: {
            juridicalPersonId_.AddEntriesFrom(input, _repeated_juridicalPersonId_codec);
            break;
          }
          case 66: {
            Bic = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
